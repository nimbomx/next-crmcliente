{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/ernestohernandez/Nimbo/CRM/crmcliente/pages/nuevoproducto.js\";\n\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query obtenerProductos {\\n      obtenerProductos {\\n          id\\n          nombre\\n          precio\\n          existencia\\n      }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation nuevoProducto($input: ProductoInput) {\\n        nuevoProducto(input: $input) {\\n            id\\n            nombre\\n            existencia\\n            precio\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport Layout from '../components/Layout';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { gql, useMutation } from '@apollo/client';\nimport Swal from 'sweetalert2';\nimport { useRouter } from 'next/router';\nvar NUEVO_PRODUCTO = gql(_templateObject());\nvar OBTENER_PRODUCTOS = gql(_templateObject2());\n\nvar NuevoProducto = function NuevoProducto() {\n  // routing\n  var router = useRouter(); // Mutation de apollo\n\n  var _useMutation = useMutation(NUEVO_PRODUCTO, {\n    update: function update(cache, _ref) {\n      var nuevoProducto = _ref.data.nuevoProducto;\n\n      // obtener el objeto de cache\n      var _cache$readQuery = cache.readQuery({\n        query: OBTENER_PRODUCTOS\n      }),\n          obtenerProductos = _cache$readQuery.obtenerProductos; // reescribir ese objeto\n\n\n      cache.writeQuery({\n        query: OBTENER_PRODUCTOS,\n        data: {\n          obtenerProductos: [].concat(_toConsumableArray(obtenerProductos), [nuevoProducto])\n        }\n      });\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      nuevoProducto = _useMutation2[0]; // Formulario para nuevos productos\n\n\n  var formik = useFormik({\n    initialValues: {\n      nombre: '',\n      existencia: '',\n      precio: ''\n    },\n    validationSchema: Yup.object({\n      nombre: Yup.string().required('El nombre del producto es obligatorio'),\n      existencia: Yup.number().required('Agrega la cantidad disponible').positive('No se aceptan números negativos').integer('La existencia deben ser números enteros'),\n      precio: Yup.number().required('El precio es obligatorio').positive('No se aceptan números negativos')\n    }),\n    onSubmit: function onSubmit(valores) {\n      var nombre, existencia, precio, _await$nuevoProducto, data;\n\n      return _regeneratorRuntime.async(function onSubmit$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              nombre = valores.nombre, existencia = valores.existencia, precio = valores.precio;\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(nuevoProducto({\n                variables: {\n                  input: {\n                    nombre: nombre,\n                    existencia: existencia,\n                    precio: precio\n                  }\n                }\n              }));\n\n            case 4:\n              _await$nuevoProducto = _context.sent;\n              data = _await$nuevoProducto.data;\n              // console.log(data);\n              // Mostrar una alerta\n              Swal.fire('Creado', 'Se creó el producto correctamente', 'success'); // Redireccionar hacia los productos\n\n              router.push('/productos');\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 10]], Promise);\n    }\n  });\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-2xl text-gray-800 font-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, \"Crear Nuevo Producto\"), __jsx(\"div\", {\n    className: \"flex justify-center mt-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"w-full max-w-lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, __jsx(\"form\", {\n    className: \"bg-white shadow-md px-8 pt-6 pb-8 mb-4\",\n    onSubmit: formik.handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 29\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"nombre\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 33\n    }\n  }, \"Nombre\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"nombre\",\n    type: \"text\",\n    placeholder: \"Nombre Producto\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.nombre,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 33\n    }\n  })), formik.touched.nombre && formik.errors.nombre ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 37\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 37\n    }\n  }, formik.errors.nombre)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 29\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"existencia\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 33\n    }\n  }, \"Cantidad Disponible\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"existencia\",\n    type: \"number\",\n    placeholder: \"Cantidad Disponible\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.existencia,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 33\n    }\n  })), formik.touched.existencia && formik.errors.existencia ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 37\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 37\n    }\n  }, formik.errors.existencia)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 29\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"precio\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 33\n    }\n  }, \"Precio\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"precio\",\n    type: \"number\",\n    placeholder: \"Precio Producto\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.precio,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 33\n    }\n  })), formik.touched.precio && formik.errors.precio ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 37\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 37\n    }\n  }, formik.errors.precio)) : null, __jsx(\"input\", {\n    type: \"submit\",\n    className: \"bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900\",\n    value: \"Agregar Nuevo Producto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 29\n    }\n  })))));\n};\n\nexport default NuevoProducto;","map":{"version":3,"sources":["/Users/ernestohernandez/Nimbo/CRM/crmcliente/pages/nuevoproducto.js"],"names":["React","Layout","useFormik","Yup","gql","useMutation","Swal","useRouter","NUEVO_PRODUCTO","OBTENER_PRODUCTOS","NuevoProducto","router","update","cache","nuevoProducto","data","readQuery","query","obtenerProductos","writeQuery","formik","initialValues","nombre","existencia","precio","validationSchema","object","string","required","number","positive","integer","onSubmit","valores","variables","input","fire","push","console","log","handleSubmit","handleChange","handleBlur","values","touched","errors"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Layout from '../components/Layout'\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup'\nimport {gql, useMutation} from '@apollo/client' \nimport Swal from 'sweetalert2'\nimport { useRouter } from 'next/router'\n\nconst NUEVO_PRODUCTO = gql`\n    mutation nuevoProducto($input: ProductoInput) {\n        nuevoProducto(input: $input) {\n            id\n            nombre\n            existencia\n            precio\n        }\n    }\n`;\n\nconst OBTENER_PRODUCTOS = gql`\n  query obtenerProductos {\n      obtenerProductos {\n          id\n          nombre\n          precio\n          existencia\n      }\n  }\n`;\n\nconst NuevoProducto = () => {\n\n    // routing\n    const router = useRouter();\n\n    // Mutation de apollo\n    const [nuevoProducto] = useMutation(NUEVO_PRODUCTO, {\n        update(cache, { data: { nuevoProducto } }) {\n            // obtener el objeto de cache\n            const { obtenerProductos } = cache.readQuery({ query: OBTENER_PRODUCTOS });\n            \n            // reescribir ese objeto\n            cache.writeQuery({\n                query: OBTENER_PRODUCTOS,\n                data: {\n                    obtenerProductos: [...obtenerProductos, nuevoProducto]\n                }\n            });\n        }\n    });\n\n    // Formulario para nuevos productos\n    const formik = useFormik({\n        initialValues: {\n            nombre: '',\n            existencia: '',\n            precio: ''\n        },\n        validationSchema: Yup.object({\n            nombre: Yup.string() \n                        .required('El nombre del producto es obligatorio'), \n            existencia: Yup.number()\n                        .required('Agrega la cantidad disponible')\n                        .positive('No se aceptan números negativos')\n                        .integer('La existencia deben ser números enteros'),\n            precio: Yup.number()\n                        .required('El precio es obligatorio')\n                        .positive('No se aceptan números negativos')\n        }), \n        onSubmit: async valores => {\n\n            const { nombre, existencia, precio } = valores;\n\n            try {\n                const { data } = await nuevoProducto({\n                    variables: {\n                        input: {\n                            nombre,\n                            existencia,\n                            precio\n                        }\n                    }\n                });\n\n                // console.log(data);\n\n                // Mostrar una alerta\n                Swal.fire(\n                    'Creado',\n                    'Se creó el producto correctamente',\n                    'success'\n                )\n\n                // Redireccionar hacia los productos\n                router.push('/productos'); \n            } catch (error) {\n                console.log(error);\n            }\n        }\n    })\n\n\n    return ( \n        <Layout>\n            <h1 className=\"text-2xl text-gray-800 font-light\">Crear Nuevo Producto</h1>\n\n            <div className=\"flex justify-center mt-5\">\n                <div className=\"w-full max-w-lg\">\n                    <form\n                        className=\"bg-white shadow-md px-8 pt-6 pb-8 mb-4\"\n                        onSubmit={formik.handleSubmit}\n                    >\n                            <div className=\"mb-4\">\n                                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"nombre\">\n                                    Nombre\n                                </label>\n\n                                <input\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                                    id=\"nombre\"\n                                    type=\"text\"\n                                    placeholder=\"Nombre Producto\"\n                                    onChange={formik.handleChange}\n                                    onBlur={formik.handleBlur}\n                                    value={formik.values.nombre}\n                                />\n                            </div>\n\n                            { formik.touched.nombre && formik.errors.nombre ? (\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\" >\n                                    <p className=\"font-bold\">Error</p>\n                                    <p>{formik.errors.nombre}</p>\n                                </div>\n                            ) : null  }\n\n                            <div className=\"mb-4\">\n                                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"existencia\">\n                                    Cantidad Disponible\n                                </label>\n\n                                <input\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                                    id=\"existencia\"\n                                    type=\"number\"\n                                    placeholder=\"Cantidad Disponible\"\n                                    onChange={formik.handleChange}\n                                    onBlur={formik.handleBlur}\n                                    value={formik.values.existencia}\n                                />\n                            </div>\n\n                            { formik.touched.existencia && formik.errors.existencia ? (\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\" >\n                                    <p className=\"font-bold\">Error</p>\n                                    <p>{formik.errors.existencia}</p>\n                                </div>\n                            ) : null  }\n\n                            <div className=\"mb-4\">\n                                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"precio\">\n                                    Precio\n                                </label>\n\n                                <input\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                                    id=\"precio\"\n                                    type=\"number\"\n                                    placeholder=\"Precio Producto\"\n                                    onChange={formik.handleChange}\n                                    onBlur={formik.handleBlur}\n                                    value={formik.values.precio}\n                                />\n                            </div>\n\n                            { formik.touched.precio && formik.errors.precio ? (\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\" >\n                                    <p className=\"font-bold\">Error</p>\n                                    <p>{formik.errors.precio}</p>\n                                </div>\n                            ) : null  }\n\n                            <input\n                                type=\"submit\"\n                                className=\"bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900\"\n                                value=\"Agregar Nuevo Producto\"\n                            />\n                    </form>\n                </div>\n            </div>\n        </Layout>\n     );\n}\n \nexport default NuevoProducto;"]},"metadata":{},"sourceType":"module"}