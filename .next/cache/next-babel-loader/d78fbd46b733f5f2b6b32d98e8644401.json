{"ast":null,"code":"var _jsxFileName = \"/Users/ernestohernandez/Nimbo/CRM/crmcliente/components/pedidos/AsignarCliente.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useContext } from 'react';\nimport Select from 'react-select';\nimport { gql, useQuery } from '@apollo/client';\nimport PedidoContext from '../../context/pedidos/PedidoContext';\nconst OBTENER_CLIENTES_USUARIO = gql`\n    query obtenerClientesVendedor {\n        obtenerClientesVendedor {\n            id\n            nombre\n            apellido\n            empresa\n            email\n        }\n    }\n`;\n\nconst AsignarCliente = () => {\n  const {\n    0: cliente,\n    1: setCliente\n  } = useState([]); // Context de pedidos\n\n  const pedidoContext = useContext(PedidoContext);\n  const {\n    agregarCliente\n  } = pedidoContext; // Consultar la base de datos\n\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(OBTENER_CLIENTES_USUARIO); // console.log(data)\n  // console.log(loading)\n  // console.log(error)\n\n  useEffect(() => {\n    agregarCliente(cliente);\n  }, [cliente]);\n\n  const seleccionarCliente = clientes => {\n    setCliente(clientes);\n  }; // Resultados de la consulta\n\n\n  if (loading) return null;\n  const {\n    obtenerClientesVendedor\n  } = data;\n  return __jsx(React.Fragment, null, __jsx(\"p\", {\n    className: \"mt-10 my-2 bg-white border-l-4 border-gray-800 text-gray-700 p-2 text-sm font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"1.- Asigna un Cliente al pedido\"), __jsx(Select, {\n    className: \"mt-3\",\n    options: obtenerClientesVendedor,\n    onChange: opcion => seleccionarCliente(opcion),\n    getOptionValue: opciones => opciones.id,\n    getOptionLabel: opciones => opciones.nombre,\n    placeholder: \"Busque o Seleccione el Cliente\",\n    noOptionsMessage: () => \"No hay resultados\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default AsignarCliente;","map":{"version":3,"sources":["/Users/ernestohernandez/Nimbo/CRM/crmcliente/components/pedidos/AsignarCliente.js"],"names":["React","useState","useEffect","useContext","Select","gql","useQuery","PedidoContext","OBTENER_CLIENTES_USUARIO","AsignarCliente","cliente","setCliente","pedidoContext","agregarCliente","data","loading","error","seleccionarCliente","clientes","obtenerClientesVendedor","opcion","opciones","id","nombre"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AAEA,MAAMC,wBAAwB,GAAGH,GAAI;;;;;;;;;;CAArC;;AAYA,MAAMI,cAAc,GAAG,MAAM;AAEzB,QAAM;AAAA,OAAEC,OAAF;AAAA,OAAWC;AAAX,MAA0BV,QAAQ,CAAC,EAAD,CAAxC,CAFyB,CAIzB;;AACA,QAAMW,aAAa,GAAGT,UAAU,CAACI,aAAD,CAAhC;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAoBD,aAA1B,CANyB,CASzB;;AACA,QAAM;AAAEE,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BV,QAAQ,CAACE,wBAAD,CAAzC,CAVyB,CAYzB;AACA;AACA;;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,cAAc,CAACH,OAAD,CAAd;AACH,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;;AAIA,QAAMO,kBAAkB,GAAGC,QAAQ,IAAI;AACnCP,IAAAA,UAAU,CAACO,QAAD,CAAV;AACH,GAFD,CApByB,CAwBzB;;;AACA,MAAGH,OAAH,EAAY,OAAO,IAAP;AAEZ,QAAM;AAAEI,IAAAA;AAAF,MAA8BL,IAApC;AAEA,SAEI,4BACI;AAAG,IAAA,SAAS,EAAC,oFAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADJ,EAEI,MAAC,MAAD;AACI,IAAA,SAAS,EAAC,MADd;AAEI,IAAA,OAAO,EAAGK,uBAFd;AAGI,IAAA,QAAQ,EAAGC,MAAM,IAAIH,kBAAkB,CAACG,MAAD,CAH3C;AAII,IAAA,cAAc,EAAGC,QAAQ,IAAIA,QAAQ,CAACC,EAJ1C;AAKI,IAAA,cAAc,EAAGD,QAAQ,IAAIA,QAAQ,CAACE,MAL1C;AAMI,IAAA,WAAW,EAAC,gCANhB;AAOI,IAAA,gBAAgB,EAAE,MAAM,mBAP5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFJ;AAgBH,CA7CD;;AA+CA,eAAed,cAAf","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport Select from 'react-select'\nimport { gql, useQuery } from '@apollo/client';\nimport PedidoContext from '../../context/pedidos/PedidoContext';\n\nconst OBTENER_CLIENTES_USUARIO = gql`\n    query obtenerClientesVendedor {\n        obtenerClientesVendedor {\n            id\n            nombre\n            apellido\n            empresa\n            email\n        }\n    }\n`;\n\nconst AsignarCliente = () => {\n\n    const [ cliente, setCliente ] = useState([]);\n\n    // Context de pedidos\n    const pedidoContext = useContext(PedidoContext);\n    const { agregarCliente} = pedidoContext;\n    \n\n    // Consultar la base de datos\n    const { data, loading, error } = useQuery(OBTENER_CLIENTES_USUARIO);\n\n    // console.log(data)\n    // console.log(loading)\n    // console.log(error)\n\n    useEffect(() => {\n        agregarCliente(cliente);\n    }, [cliente])\n\n    const seleccionarCliente = clientes => {\n        setCliente(clientes);\n    }\n\n    // Resultados de la consulta\n    if(loading) return null;\n\n    const { obtenerClientesVendedor } = data;\n\n    return ( \n\n        <>\n            <p className=\"mt-10 my-2 bg-white border-l-4 border-gray-800 text-gray-700 p-2 text-sm font-bold\">1.- Asigna un Cliente al pedido</p>\n            <Select\n                className=\"mt-3\"\n                options={ obtenerClientesVendedor }\n                onChange={ opcion => seleccionarCliente(opcion) }\n                getOptionValue={ opciones => opciones.id }\n                getOptionLabel={ opciones => opciones.nombre }\n                placeholder=\"Busque o Seleccione el Cliente\"\n                noOptionsMessage={() => \"No hay resultados\"}\n            />\n\n        </>\n     );\n}\n \nexport default AsignarCliente;"]},"metadata":{},"sourceType":"module"}