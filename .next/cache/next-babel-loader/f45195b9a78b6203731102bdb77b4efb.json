{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/ernestohernandez/Nimbo/CRM/crmcliente/pages/nuevopedido.js\";\n\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query obtenerPedidosVendedor {\\n      obtenerPedidosVendedor {\\n        id\\n        pedido {\\n          id\\n          cantidad\\n          nombre\\n        }\\n        cliente {\\n          id\\n          nombre\\n          apellido\\n          email\\n          telefono\\n        }\\n        vendedor\\n        total\\n        estado\\n      }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation nuevoPedido($input: PedidoInput){\\n        nuevoPedido(input: $input) {\\n            id\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext, useState } from 'react';\nimport Layout from '../components/Layout';\nimport AsignarCliente from '../components/pedidos/AsignarCliente';\nimport AsignarProductos from '../components/pedidos/AsignarProductos';\nimport ResumenPedido from '../components/pedidos/ResumenPedido';\nimport Total from '../components/pedidos/Total';\nimport { gql, useMutation } from '@apollo/client';\nimport { useRouter } from 'next/router';\nimport Swal from 'sweetalert2'; // Context de pedidos\n\nimport PedidoContext from '../context/pedidos/PedidoContext';\nvar NUEVO_PEDIDO = gql(_templateObject());\nvar OBTENER_PEDIDOS = gql(_templateObject2());\n\nvar NuevoPedido = function NuevoPedido() {\n  var router = useRouter();\n\n  var _useState = useState(null),\n      mensaje = _useState[0],\n      setMensaje = _useState[1]; // Utilizar context y extraer sus funciones y valores\n\n\n  var pedidoContext = useContext(PedidoContext);\n  var cliente = pedidoContext.cliente,\n      productos = pedidoContext.productos,\n      total = pedidoContext.total; // Mutation para crear un nuevo pedido\n\n  var _useMutation = useMutation(NUEVO_PEDIDO, {\n    update: function update(cache, _ref) {\n      var nuevoPedido = _ref.data.nuevoPedido;\n\n      var _cache$readQuery = cache.readQuery({\n        query: OBTENER_PEDIDOS\n      }),\n          obtenerPedidosVendedor = _cache$readQuery.obtenerPedidosVendedor;\n\n      cache.writeQuery({\n        query: OBTENER_PEDIDOS,\n        data: {\n          obtenerPedidosVendedor: [].concat(_toConsumableArray(obtenerPedidosVendedor), [nuevoPedido])\n        }\n      });\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      nuevoPedido = _useMutation2[0]; // TODO ACTUALIZAR EL CACHE\n\n\n  var validarPedido = function validarPedido() {\n    return !productos.every(function (producto) {\n      return producto.cantidad > 0;\n    }) || total === 0 || cliente.length === 0 ? \" opacity-50 cursor-not-allowed \" : \"\";\n  };\n\n  var crearNuevoPedido = function crearNuevoPedido() {\n    var id, pedido, _await$nuevoPedido, data;\n\n    return _regeneratorRuntime.async(function crearNuevoPedido$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = cliente.id; // Remover lo no deseado de productos\n\n            pedido = productos.map(function (_ref2) {\n              var __typename = _ref2.__typename,\n                  existencia = _ref2.existencia,\n                  producto = _objectWithoutProperties(_ref2, [\"__typename\", \"existencia\"]);\n\n              return producto;\n            }); // console.log(pedido);\n\n            _context.prev = 2;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(nuevoPedido({\n              variables: {\n                input: {\n                  cliente: id,\n                  total: total,\n                  pedido: pedido\n                }\n              }\n            }));\n\n          case 5:\n            _await$nuevoPedido = _context.sent;\n            data = _await$nuevoPedido.data;\n            // console.log(data);\n            // Redireccionar\n            router.push('/pedidos'); // Mostrar alerta\n\n            Swal.fire('Correcto', 'El pedido se registr√≥ correctamente', 'success');\n            _context.next = 15;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](2);\n            setMensaje(_context.t0.message.replace('GraphQL error: ', ''));\n            setTimeout(function () {\n              setMensaje(null);\n            }, 3000);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 11]], Promise);\n  };\n\n  var mostrarMensaje = function mostrarMensaje() {\n    return __jsx(\"div\", {\n      className: \"bg-white py-2 px-3 w-full my-3 max-w-sm text-center mx-auto \",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, mensaje, \" \"));\n  };\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-2xl text-gray-800 font-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, \"Crear Nuevo Pedido\"), mensaje && mostrarMensaje(), __jsx(\"div\", {\n    className: \"flex justify-center mt-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"w-full max-w-lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, __jsx(AsignarCliente, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }), __jsx(AsignarProductos, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }), __jsx(ResumenPedido, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }), __jsx(Total, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }), __jsx(\"button\", {\n    type: \"button\",\n    className: \" bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900 \".concat(validarPedido(), \" \"),\n    onClick: function onClick() {\n      return crearNuevoPedido();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }, \"Registrar Pedido\"))));\n};\n\nexport default NuevoPedido;","map":{"version":3,"sources":["/Users/ernestohernandez/Nimbo/CRM/crmcliente/pages/nuevopedido.js"],"names":["React","useContext","useState","Layout","AsignarCliente","AsignarProductos","ResumenPedido","Total","gql","useMutation","useRouter","Swal","PedidoContext","NUEVO_PEDIDO","OBTENER_PEDIDOS","NuevoPedido","router","mensaje","setMensaje","pedidoContext","cliente","productos","total","update","cache","nuevoPedido","data","readQuery","query","obtenerPedidosVendedor","writeQuery","validarPedido","every","producto","cantidad","length","crearNuevoPedido","id","pedido","map","__typename","existencia","variables","input","push","fire","message","replace","setTimeout","mostrarMensaje"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport Layout from '../components/Layout';\nimport AsignarCliente from '../components/pedidos/AsignarCliente'\nimport AsignarProductos from '../components/pedidos/AsignarProductos'\nimport ResumenPedido from '../components/pedidos/ResumenPedido'\nimport Total from '../components/pedidos/Total';\nimport { gql, useMutation¬†} from '@apollo/client'\nimport { useRouter¬†} from 'next/router';\nimport Swal from 'sweetalert2';\n\n// Context de pedidos\nimport PedidoContext from '../context/pedidos/PedidoContext';\n\nconst NUEVO_PEDIDO = gql`\n    mutation nuevoPedido($input: PedidoInput){\n        nuevoPedido(input: $input) {\n            id\n        }\n    }\n`;\n\n\nconst OBTENER_PEDIDOS = gql`\n  query obtenerPedidosVendedor {\n      obtenerPedidosVendedor {\n        id\n        pedido {\n          id\n          cantidad\n          nombre\n        }\n        cliente {\n          id\n          nombre\n          apellido\n          email\n          telefono\n        }\n        vendedor\n        total\n        estado\n      }\n  }\n`\n\nconst NuevoPedido = () => {\n\n    const router = useRouter();\n    \n    const [mensaje, setMensaje] = useState(null);\n\n    // Utilizar context y extraer sus funciones y valores\n    const pedidoContext = useContext(PedidoContext);\n    const { cliente, productos, total¬†} = pedidoContext;\n\n    // Mutation para crear un nuevo pedido\n    const [ nuevoPedido ] = useMutation(NUEVO_PEDIDO, {\n        update(cache, { data: { nuevoPedido }})¬†{\n          const {  obtenerPedidosVendedor} = cache.readQuery({query: OBTENER_PEDIDOS });\n          cache.writeQuery({\n            query: OBTENER_PEDIDOS,\n            data: {\n              obtenerPedidosVendedor: [...obtenerPedidosVendedor, nuevoPedido]\n            }\n          })\n        }\n      }); // TODO ACTUALIZAR EL CACHE\n\n    const validarPedido = () => {\n        return !productos.every( producto => producto.cantidad > 0 ) || total === 0 || cliente.length === 0 ? \" opacity-50 cursor-not-allowed \"  : \"\" ;\n    }\n\n    const crearNuevoPedido  = async () => {\n\n        const {¬†id } = cliente;\n\n        // Remover lo no deseado de productos\n       const pedido = productos.map(( {__typename, existencia , ...producto} ) => producto )\n        // console.log(pedido);\n\n        try {\n            const {¬†data } = await nuevoPedido({\n                variables: {\n                    input: {\n                        cliente: id,\n                        total,\n                        pedido\n                    }\n                }\n            });\n            // console.log(data);\n\n            // Redireccionar\n            router.push('/pedidos');\n\n            // Mostrar alerta\n            Swal.fire(\n                'Correcto',\n                'El pedido se registr√≥ correctamente',\n                'success'\n            )\n        } catch (error) {\n            setMensaje(error.message.replace('GraphQL error: ', ''));\n\n            setTimeout(() => {\n                setMensaje(null)\n            }, 3000);\n        }\n    }\n\n    const mostrarMensaje = () => {\n        return (\n            <div className=\"bg-white py-2 px-3 w-full my-3 max-w-sm text-center mx-auto \">\n                <p>{mensaje} </p>\n            </div>\n        )\n    }\n\n    return ( \n        <Layout>\n            <h1 className=\"text-2xl text-gray-800 font-light\">Crear Nuevo Pedido</h1>\n\n            {mensaje && mostrarMensaje() }\n\n            <div className=\"flex justify-center mt-5\">\n                <div className=\"w-full max-w-lg\">\n                    <AsignarCliente />\n                    <AsignarProductos />\n                    <ResumenPedido />\n                    <Total />\n\n                    <button\n                        type=\"button\"\n                        className={` bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900 ${ validarPedido() } `}\n                        onClick={() => crearNuevoPedido() }\n\n                    >Registrar Pedido</button>\n                </div>\n            </div>\n           \n        </Layout>\n     );\n}\n \nexport default NuevoPedido;"]},"metadata":{},"sourceType":"module"}